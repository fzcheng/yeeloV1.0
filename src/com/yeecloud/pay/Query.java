package com.yeecloud.pay;import android.os.Handler;import android.os.Message;import java.util.HashMap;import java.util.Map;import com.yeecloud.Constant;public class Query {	private static Query b = new Query();	private QueryPayResultListener c;	final Handler a = new Handler() {		@Override		public void handleMessage(Message paramMessage) {			int i = paramMessage.what;			String str = (String) paramMessage.obj;			switch (i) {			case -1:				Query.getInstence().getQueryListener().onResult(0);				break;			case 200:				int j = Integer.parseInt(str);				Query.getInstence().getQueryListener().onResult(j);				break;			default:				Query.getInstence().getQueryListener().onResult(-1);				break;			}		}	};	public static Query getInstence() {		return b;	}	public QueryPayResultListener getQueryListener() {		return c;	}	public void a(String orderId,			QueryPayResultListener paramQueryPayResultListener) {		this.c = paramQueryPayResultListener;		if ((orderId != null) && (orderId.length() > 0)) {			String str = Constant.BASE_URL + "sdk/pay/getOrderResult.do";			HashMap localHashMap = new HashMap();			localHashMap.put("orderId", orderId);			new QueryThread(this, this.a, str, localHashMap).start();		} else {			paramQueryPayResultListener.onResult(-2);		}	}}